<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyz.ddedss_springboot.mapper.ResultMapper">
    <select id="getExamIdByStudentId" resultType="java.lang.Integer">
        select exam_id
        from ddedss.result
        where student_id = #{studentId}
        group by exam_id
    </select>

    <select id="getSumScore" resultType="java.lang.Integer">
        select sum(score)
        from ddedss.result
        where student_id in
        <foreach collection="studentIds" index="index" item="studentId" open="(" separator="," close=")">
            #{studentId}
        </foreach>
        and
        exam_id=#{examId}
        and
        score!=-1
    </select>

    <select id="getNoScoreStudentNum" resultType="java.lang.Integer">
        SELECT count(id)
        FROM ddedss.result
        WHERE exam_id = #{examId}
          and subject_id = #{subjectId}
          and score = -1
          AND student_id IN (SELECT id
                             FROM ddedss.student
                             WHERE class_id = #{classId}
                               and is_deleted = 0)
    </select>

    <select id="getExaminationResults" resultType="com.lyz.ddedss_springboot.vo.ExaminationResults">
        SELECT
        subject.`name` 'subjectName',
        sum(if( score >= 80 AND 100 >= score, 1, 0 )) 'good',
        sum(if( score >= 60 AND 80 > score, 1, 0 )) 'mid',
        sum(if( 60 > score, 1, 0 )) 'bad'
        FROM
        ddedss.result
        LEFT JOIN ddedss.`subject` ON result.subject_id = ddedss.`subject`.id
        WHERE
        student_id in
        <foreach collection="studentIds" item="studentId" open="(" close=")" separator=",">
            #{studentId}
        </foreach>
        GROUP BY
        subject_id
    </select>
</mapper>
